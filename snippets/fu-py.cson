'.source.python':
  'IfElifElse':
    'prefix': 'if_elif_else'
    'body': """
      if ${1:true}:
          $2
      elif ${3:false}:
          $4
      else:
          $5
      $6
    """
  'MyPrint':
    'prefix': 'print'
    'body': 'print("$1")$2'

  'class init':
    'prefix': 'fu-classinit'
    'body': """
      class ${1Classname}(object):

        def __init__(self):
          ${2pass}
      $3
    """

  'add -> map':
    'prefix': 'fu-map_add'
    'body': """
      def func(element):
        return element + 1

      new_lst = map(func,lst)
    """

  '__magic__':
    'prefix': '__'
    'body': '__${1:init}__'

  'Dictionary Comprehension':
    'prefix': 'fu-dc'
    'body': '{${1:key}: ${2:value} for ${3:key}, ${4:value} in ${5:variable}}'

  'New Function':
    'prefix': 'fu-def'
    'body': 'def ${1:fname}(${2:arg}):\n\t${3:pass}'

  'From/Import':
    'prefix': 'fu-fim'
    'body': 'from ${1:package/module} import ${2:names}'

  'for':
    'prefix': 'fu-for'
    'body': 'for ${1:value} in ${2:variable}:\n\t${3:pass}'

  'Try/Except':
    'prefix': 'fu-try'
    'body': 'try:\n\t${1:pass}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}'

  'Try/Except/Else':
    'prefix': 'trye'
    'body': 'try:\n\t${1:pass}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nelse:\n\t${5:pass}'

  'Try/Except/Else/Finally':
    'prefix': 'tryef'
    'body': 'try:\n\t${1:pass}\nexcept${2: ${3:Exception} as ${4:e}}:\n\t${5:raise}\nelse:\n\t${6:pass}\nfinally:\n\t${7:pass}'

  'Try/Except/Finally':
    'prefix': 'tryf'
    'body': 'try:\n\t${1:pass}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nfinally:\n\t${5:pass}'

  'while':
    'prefix': 'while'
    'body': 'while ${1:condition}:\n\t${2:pass}'

  'with statement':
    'prefix': 'with'
    'body': 'with ${1:expression} as ${2:target}:\n\t${3:pass}'
